commit a2b9e74781f992c54aedeb2fd1da231f3898cd5a
Author: John Szakmeister <john@szakmeister.net>
Date:   Mon Dec 10 04:24:34 2012 -0500

    Fix an infinite recursion issue in Python 3.3.
    
    Python 3.3 has introduced implicit namespace packages (PEP-420), which
    means that some directories can get introduced that have the same base
    component as the Python package as we're interested in.
    
    In our case, the traverse namespace test has a support folder called
    `namespace_pkg`, which has a directory called `namespace_pkg` and
    `site-packages/namespace_pkg` underneath it.  All three directories are
    now included in `namespace_pkg.__path__` due to PEP-420, where
    previously only the latter two entries where.  This caused us to
    repeatedly visit `support/namespace_pkg` over and over again.  To fix
    this, we now keep track of which paths have been visited and avoid
    re-visiting ones we've already examined.

diff --git a/nose/loader.py b/nose/loader.py
index 1103099..601c230 100644
--- a/nose/loader.py
+++ b/nose/loader.py
@@ -93,7 +93,10 @@ class TestLoader(unittest.TestLoader):
         if config.addPaths:
             add_path(workingDir, config)        
         self.suiteClass = ContextSuiteFactory(config=config)
-        unittest.TestLoader.__init__(self)     
+
+        self._visitedPaths = set([])
+
+        unittest.TestLoader.__init__(self)
 
     def getTestCaseNames(self, testCaseClass):
         """Override to select with selector, unless
@@ -121,6 +124,18 @@ class TestLoader(unittest.TestLoader):
             sort_list(cases, cmp_to_key(self.sortTestMethodsUsing))
         return cases
 
+    def _haveVisited(self, path):
+        # For cases where path is None, we always pretend we haven't visited
+        # them.
+        if path is None:
+            return False
+
+        return path in self._visitedPaths
+
+    def _addVisitedPath(self, path):
+        if path is not None:
+            self._visitedPaths.add(path)
+
     def loadTestsFromDir(self, path):
         """Load tests from the directory at path. This is a generator
         -- each suite of tests from a module or other file is yielded
@@ -155,7 +170,14 @@ class TestLoader(unittest.TestLoader):
                         continue
                     wanted = self.selector.wantDirectory(entry_path)
             is_package = ispackage(entry_path)
-            if wanted:
+
+            # Python 3.3 now implements PEP 420: Implicit Namespace Packages.
+            # As a result, it's now possible that parent paths that have a
+            # segment with the same basename as our package ends up
+            # in module.__path__.  So we have to keep track of what we've
+            # visited, and not-revisit them again.
+            if wanted and not self._haveVisited(entry_path):
+                self._addVisitedPath(entry_path)
                 if is_file:
                     plugins.beforeContext()
                     if entry.endswith('.py'):
